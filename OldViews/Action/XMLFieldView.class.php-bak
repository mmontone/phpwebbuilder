<?
require_once(dirname(__FILE__). "/AbstractFieldView.class.php");

class XMLFieldView extends AbstractFieldView {
	function show($obj, $showObjFields) {
		return $obj->showField($this);
	}
	function frmName($object) {
		return $this->field->colName;
	}
	function visitedTextField($field) {
		$view = new XMLTextFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedDateTimeField($field) {
		$view = new XMLDateTimeFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedDateField($field) {
		$view = new XMLDateFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedTimeField($field) {
		$view = new XMLTimeFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedCollectionField($field) {
		$view = new XMLCollectionFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedTextArea($field) {
		$view = new XMLTextAreaView;
		$view->field = $field;
		return $view;
	}
	function visitedBoolField($field) {
		$view = new XMLBoolFieldView	;
		$view->field = $field;
		return $view;
	}
	function visitedNumField($field) {
		$view = new XMLNumFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedIdField($field) {
		$view = new XMLIdFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedIndexField($field) {
		$view = new XMLIndexFieldView;
		$view->field = $field;
		return $view;
	}
	function visitedUserField($field) {
		$view = new XMLNameUserFieldView;
		$view->field = $field;
		return $view;
	}
}


class XMLCollectionFieldView extends XMLFieldView {
	function formObject ($object) {
/*		$colec = $this->field->collection;
		$html = $object->viewFor($colec);
		$ret = $html->showElements();
		$htmlobj = $object->viewFor(new $colec->dataType);
		$ret .= $htmlobj->makelink("Agregar", "Add", "&".$colec->dataType.$this->field->fieldname."=".$object->obj->getID());*/
		return "";
	}
	function show ($object, $objFields) {
		if ($objFields) {return parent::show ($object, $objFields);}
	}
}

class XMLIndexFieldView extends XMLFieldView {
	function formObject ($object) {
		$html = $object->viewFor($this->field->collection);
		return $html->asSelect($this->frmName($object), $this->field->getValue());
	}
	function show ($object, $objFields) {
		/*if ($objFields) {*/
		/* necesito obtener el objeto apuntado, y luego mostrarlo. */
		$obj = new $this->field->collection->dataType;
		/*$ret .= $this->field->collection->dataType;
		$ret .= ($this->field->value);*/
		
		$obj->setId($this->field->value);
		$obj->load();
		/*$ret .= print_r($obj, TRUE);*/
		 
		$html = new XMLView;	
		$html = $html->viewFor($obj);
		$ret .= $html->show();
		return $ret;
//}
	}
}
class XMLUserFieldView extends XMLIndexFieldView {

	function formObject ($object) {
		$html = $object->viewFor($this->field->collection);
		if(!(isset($_SESSION[sitename]["id"])))
		//ISERTAR QUE MUESTRE LOGIN
			$ret=$html->asSelect($this->frmName($object), $this->field->getValue());
		else $ret="";
		return $ret;
	}
}

class XMLNumFieldView extends XMLFieldView {
	function formObject($object) {
		$ret .= "\n<num name=\"";
		$ret .= $this->frmName($object);
		$ret .= "\" value=\"";
		$ret .= $this->field->getValue();
		$ret .= "\" />";
		return $ret;
	}
}

class XMLTextFieldView extends XMLFieldView {
	function formObject($object) {
		$ret .= "\n<text name=\"";
		$ret .= $this->frmName($object);
		$ret .= "\" value=\"";
		$ret .= $this->field->getValue();
		$ret .= "\" />";
		return $ret;
	}
}

class XMLIdFieldView extends XMLFieldView {
	function formObject ($object) {
		return "\n<id value=".$this->field->value." />";
	}
}

class XMLTextAreaView extends XMLFieldView {
	function formObject ($object) {
		$ret .= "\n<text-area name=\"";
		$ret .= $this->frmName($object);
		$ret .= "\" >";
		$ret .= $this->field->convFromHTML($this->field->getValue());
		$ret .= "\n</text-area>";
		return $ret;
	}
}

class XMLBoolFieldView extends XMLFieldView {      
	function listObject () {
		return "\n". $this->field->value;
	}
	function formObject ($object) {
		if ($this->field->value){ $chk  ="TRUE";} else { $chk  ="FALSE";}
		return "\n<bool name=\"".$this->frmName($object)."\" value=$chk />";
	}
}

class XMLDateTimeFieldView	extends XMLFieldView {
	function dateFormObject($object){
		$field = $this->field;
		$date = $field->dateArray();
		$ret = "";
		
		$ret .= "\n   <mday name=\"";
		$ret .= $this->frmName($object) . "mday";
		$ret .= "\" value=\"";
		$ret .= $date["mday"];
		$ret .= "\" />";
		
		$ret .= "\n   <mon name=\"";
		$ret .= $this->frmName($object) . "mon";
		$ret .= "\" value=\"";
		$ret .= $date["mon"];
		$ret .= "\" />";
		
		$ret .= "\n   <year name=\"";
		$ret .= $this->frmName($object) . "year";
		$ret .= "\" value=\"";
		$ret .= $date["year"];
		$ret .= "\" />";
		
		return $ret;
	}
	function formObject($object){
		return "\n<datetime name=\"". $this->frmName($object) .">".$this->dateFormObject($object) . $this->timeFormObject($object)."\n                     </datetime>";
	}
	function timeFormObject($object) {
		$field = $this->field;
		$date = $field->dateArray();
		$ret .= "\n   <hour name=\"";
		$ret .= $this->frmName($object) . "hours";
		$ret .= "\" value=\"";
		$ret .= $date["hours"];
		$ret .= "\" />";
		
		$ret .= "\n   <min name=\"";
		$ret .= $this->frmName($object) . "minutes";
		$ret .= "\" value=\"";
		$ret .= $date["minutes"];
		$ret .= "\" />";
		
		$ret .= "\n   <sec name=\"";
		$ret .= $this->frmName($object) . "seconds";
		$ret .= "\" value=\"";
		$ret .= $date["seconds"];
		$ret .= "\" />";

		return $ret;
	}
}
class XMLDateFieldView			extends XMLDateTimeFieldView {
	function formObject($object){
		return "\n<date name=\"". $this->frmName($object) .">".$this->dateFormObject($object) ."\n                     </date>";
	}
}
class XMLTimeFieldView			extends XMLDateTimeFieldView {
	function formObject($object){
		return "\n<time name=\"". $this->frmName($object) .">" . $this->timeFormObject($object)."\n                     </time>";
	}
}


?>
