
@Article{WDGTS,
  author = 	 "",
  journal =	 "http://en.wikipedia.org/wiki/GUI\_Widget",

	title = "Widgets"}

@Article{XUL,
  author = 	 "",
  journal =	 "http://www.mozilla.org/projects/xul",

	title = "El proyecto XUL"}

@Article{YACC,
  author = 	 "",
  journal =	 "http://dinosaur.compilertools.net/yacc/index.html",
	title = "Yet another Compiler-Compiler"}

@Article{BISON,
  author = 	 "",
  journal =	 "http://www.gnu.org/software/bison",
  year = 	 1920,
        title= "Bison"}

@Article{PARSEC,
  author = 	 "",
  journal =	 "http://www.cs.uu.nl/~daan/parsec.html",
        title="Parsec"}

@Article{OQL,
  author = 	 "",
  journal =	 "http://www.odmg.org",

        title="OQL Language"}

@Article{DSLs,
  author = 	 "",
  journal =	 "http://homepages.cwi.nl/~arie/papers/dslbib",
        title="DSLs"}

@inproceedings{Duca04e,
	abstract = {Developing web applications is difficult since (1) the
  client-server relationship is asymmetric: the server cannot update clients but
  only responds to client requests and (2) the navigation facilities of web
  browsers lead to a situation where servers cannot control the state of the
  clients. Page-centric web application frameworks fail to offer adequate
  solutions to model control flow at a high-level of abstraction. Developers
  have to work manually around the shortcomings of the HTTP protocol. Some
  approaches offer better abstractions by composing an application out of
  components, however they still fail to offer modeling control flow at a high
  level. Continuation-based approaches solve this problem by providing the
  facilities to model a control flow over several pages with one piece of code.
  However combining multiple flows inside the same page is difficult. This
  article presents Seaside. Seaside is a framework which combines an
  objectoriented approach with a continuation-based one. A Seaside application
  is built out of components (i.e., objects) and the logic of the application
  benefits from the continuation-based program flow infrastructure. Seaside
  offers a unique way to have multiple control flows on a page, one for each
  component. This enables the developer to write components that are highly
  reusable and that can be used to compose complex web applications with higher
  quality in less time.},
	author = {St\'ephane Ducasse and Adrian Lienhard and Lukas Renggli},
	booktitle = {Proceedings of ESUG Research Track 2004},
	cvs = {seaside},
	misc = {Also Technical Report IAM-04-008},
	month = {sep},
	pages = {231-257},
	title = {Seaside --- a Multiple Control Flow Web Application Framework},
	url = {http://www.iam.unibe.ch/~scg/Archive/Papers/Duca04eSeaside.pdf
  http://www.iam.unibe.ch/publikationen/techreports/2004/iam-04-008},
	year = {2004}}

@Article{seaside,
  author = 	 "",
  journal =	 "http://seaside.st/",
        title="Seaside - A framework for developing sophisticated web applications in Smalltalk"}

@Article{hibernate,
  author = 	 "",
  journal =	 "www.hibernate.org/",

	title="Hibernate"}

@Article{jpox,
  author = 	 "",
  journal =	 "http://www.jpox.org/",

	title="JPOX JDO"}

@Article{macros,
  author = 	 "",
  journal =	 "http://en.wikipedia.org/wiki/C\_preprocessor",

	title="Macros"}

@Article{aop,

  author = 	 "Guilherme Blanco",
  journal =	 "http://www.phpclasses.org/browse/package/3215.html",
	title="Transparent AOP "}

@Article{mvc,
  journal =	 "http://en.wikipedia.org/wiki/Model-view-controller",
	title="MVC - Model-View-Controller"}


@Article{classtable,
  journal =	 "http://www.martinfowler.com/eaaCatalog/classTableInheritance.html",
	title="Class table Inheritance"}


@Article{activerecord,
  journal =	 "http://www.martinfowler.com/eaaCatalog/activeRecord.html",
	title="Active Record pattern"}

DB:
http://www.martinfowler.com/eaaCatalog/identityMap.html
http://www.martinfowler.com/eaaCatalog/lazyLoad.html
http://www.martinfowler.com/eaaCatalog/foreignKeyMapping.html
http://www.martinfowler.com/eaaCatalog/metadataMapping.html
http://www.martinfowler.com/eaaCatalog/queryObject.html
http://www.martinfowler.com/eaaCatalog/optimisticOfflineLock.html

Controller:
http://www.martinfowler.com/eaaCatalog/frontController.html

View:
http://www.martinfowler.com/eaaCatalog/templateView.html


ToDo:
http://www.martinfowler.com/eaaCatalog/unitOfWork.html
http://www.martinfowler.com/eaaCatalog/associationTableMapping.html


Zope, http://www.symfony-project.com/,

http://www.phpmvc.net/,



@Article{cake,
  journal =	 "http://www.cakephp.org/",
	title="CakePHP"}


@Article{RoR,
  journal =	 "http://www.rubyonrails.org/",
	title="Ruby on Rails"}

@Article{glorp,
  journal =	 "http://glorp.org/",
	title="GLORP"}


http://seagull.phpkitchen.com/,

http://www.struts4php.org/,

http://www.mojavelinux.com/projects/studs/.

http://dev.helma.org/